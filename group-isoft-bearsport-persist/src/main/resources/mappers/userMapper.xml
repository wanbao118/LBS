<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.group.isoft.bearsport.persist.user.UserMapper">
	<resultMap id="userMap" type="com.group.isoft.bearsport.model.user.User">
		<id property="id" column="ID" javaType="String" />
		<result property="userId" column="USER_ID" javaType="String" />
		<result property="nickName" column="NICK_NAME"
			javaType="String" />
		<result property="gender" column="GENDER"
			javaType="String" />
		<result property="language" column="LANGUAGE" javaType="String" />
		<result property="city" column="CITY"
			javaType="String" />
		<result property="province" column="PROVINCE"
			javaType="String" />
		<result property="country" column="COUNTRY"
			javaType="String" />
		<result property="avatarUrl" column="AVATAR_URL"
			javaType="String" />
		<result property="description" column="DESCRIPTION"
			javaType="String" />
		<result property="level" column="LEVEL"
			javaType="String" />
		<result property="creditLevel" column="CREDIT_LEVEL"
			javaType="String" />
		<result property="favType1" column="FAVTYPE1"
			javaType="String" />
		<result property="favType2" column="FAVTYPE2"
			javaType="String" />
		<result property="favType3" column="FAVTYPE3"
			javaType="String" />
		<result property="firstLoginTime" column="FIRST_LOGIN_TIME"
			javaType="java.sql.Timestamp" />
		<result property="lastLoginTime" column="LAST_LOGIN_TIME"
			javaType="java.sql.Timestamp" />
		<result property="openId" column="OPEN_ID"
			javaType="String" />
		<result property="latitude" column="LATITUDE"
			javaType="String" />
		<result property="longitude" column="LONGTITUDE"
			javaType="String" />
		<result property="loginCity" column="LOGIN_CITY"
			javaType="String" />

	</resultMap>
	<sql id="Base_Column_List">
		ID AS id, USER_ID AS userId, NICK_NAME AS nickName,
		GENDER AS gender, LANGUAGE AS language,
		CITY AS city, PROVINCE AS province,
		COUNTRY AS country, AVATAR_URL AS avatarUrl,
		DESCRIPTION as description, LEVEL as level,
		CREDIT_LEVEL as creditLevel, FAVTYPE1 as favType1,
		FAVTYPE2 as favType2,FAVTYPE3 as favType3,
		FIRST_LOGIN_TIME as firstLoginTime, LAST_LOGIN_TIME as lastLoginTime,
		OPEN_ID as openId,LATITUDE as latitude,LONGTITUDE as longitude,LOGIN_CITY as loginCity
	</sql>

	<insert id="addUser" parameterType="com.group.isoft.bearsport.model.user.User">
		insert into t_user
		(ID,USER_ID,NICK_NAME,GENDER,LANGUAGE,CITY,PROVINCE,COUNTRY,AVATAR_URL,DESCRIPTION,LEVEL,CREDIT_LEVEL,FAVTYPE1,
		FAVTYPE2,FAVTYPE3,FIRST_LOGIN_TIME,LAST_LOGIN_TIME,OPEN_ID,LATITUDE,LONGTITUDE,LOGIN_CITY)
		values
		(#{id},#{userId},#{nickName},#{gender},#{language},#{city},#{province},#{country},#{avatarUrl},#{description},#{level}
		,#{creditLevel},#{favType1},#{favType2},#{favType3},#{firstLoginTime},#{lastLoginTime},#{openId},#{latitude},#{longitude},#{loginCity})
	</insert>

	<select id="fetchUserDetlByOpenId" parameterType="String"
		resultType="com.group.isoft.bearsport.model.user.User">
		select
		<include refid="Base_Column_List" />
		from t_user where OPEN_ID = #{openId}
	</select>

	<select id="queryUserList"
		resultType="com.group.isoft.bearsport.model.user.User">
		select
		<include refid="Base_Column_List" />
		from t_user
	</select>

	<update id="updateUser" parameterType="com.group.isoft.bearsport.model.user.User">
		update t_user SET
		LEVEL = #{level}, CREDIT_LEVEL = #{creditLevel}, LAST_LOGIN_TIME = #{lastLoginTime}, DESCRIPTION = #{description}, LATITUDE = #{latitude}
		, LONGTITUDE = #{longitude}, AVATAR_URL = #{avatarUrl},
		CITY = #{city},COUNTRY = #{country},GENDER = #{gender},
		LANGUAGE = #{language},NICK_NAME = #{nickName},
		PROVINCE = #{province}, LOGIN_CITY = #{loginCity} where OPEN_ID = #{openId}
	</update>
	<select id="fetchMaxUserId" resultType="String">
		select MAX(USER_ID) as USER_ID from t_user
	</select>
	
	<insert id="addFriend" parameterType="java.lang.String">
		insert into t_friends (openId, friend_openId, relationship_status) values (#{arg0}, #{arg1}, '0')
	</insert>
	
	<update id="updateRelationshipStatus" parameterType="java.lang.String">
		update t_friends SET relationship_status=#{arg2} where (openId=#{arg0} and friend_openId=#{arg1}) or (friend_openId=#{arg0} and openId=#{arg1}) 
	</update>
	
	<select id="fetchMakeFriendApplications" parameterType="java.lang.String" resultType="com.group.isoft.bearsport.model.user.User">
		select t_user.ID AS id, t_user.USER_ID AS userId, t_user.NICK_NAME AS nickName,
		t_user.GENDER AS gender, t_user.LANGUAGE AS language,
		t_user.CITY AS city, t_user.PROVINCE AS province,
		t_user.COUNTRY AS country, t_user.AVATAR_URL AS avatarUrl,
		t_user.DESCRIPTION as description, t_user.LEVEL as level,
		t_user.CREDIT_LEVEL as creditLevel, t_user.FAVTYPE1 as favType1,
		t_user.FAVTYPE2 as favType2,t_user.FAVTYPE3 as favType3,
		t_user.FIRST_LOGIN_TIME as firstLoginTime, t_user.LAST_LOGIN_TIME as lastLoginTime,
		t_user.OPEN_ID as openId,t_user.LATITUDE as latitude,t_user.LONGTITUDE as longitude,t_user.LOGIN_CITY as loginCity from (select friend_openId as id from t_friends where openId=#{openId}) a inner join t_user on a.id = t_user.OPEN_ID
	</select>
	
	<select id="fetchFriendList" parameterType="java.lang.String" resultType="com.group.isoft.bearsport.model.user.User">
		select t_user.ID AS id, t_user.USER_ID AS userId, t_user.NICK_NAME AS nickName,
		t_user.GENDER AS gender, t_user.LANGUAGE AS language,
		t_user.CITY AS city, t_user.PROVINCE AS province,
		t_user.COUNTRY AS country, t_user.AVATAR_URL AS avatarUrl,
		t_user.DESCRIPTION as description, t_user.LEVEL as level,
		t_user.CREDIT_LEVEL as creditLevel, t_user.FAVTYPE1 as favType1,
		t_user.FAVTYPE2 as favType2,t_user.FAVTYPE3 as favType3,
		t_user.FIRST_LOGIN_TIME as firstLoginTime, t_user.LAST_LOGIN_TIME as lastLoginTime,
		t_user.OPEN_ID as openId,t_user.LATITUDE as latitude,t_user.LONGTITUDE as longitude,t_user.LOGIN_CITY as loginCity from (select friend_openId as id from t_friends where openId=#{openId} and relationship_status='1') a inner join t_user on a.id = t_user.OPEN_ID
union
select t_user.ID AS id, t_user.USER_ID AS userId, t_user.NICK_NAME AS nickName,
		t_user.GENDER AS gender, t_user.LANGUAGE AS language,
		t_user.CITY AS city, t_user.PROVINCE AS province,
		t_user.COUNTRY AS country, t_user.AVATAR_URL AS avatarUrl,
		t_user.DESCRIPTION as description, t_user.LEVEL as level,
		t_user.CREDIT_LEVEL as creditLevel, t_user.FAVTYPE1 as favType1,
		t_user.FAVTYPE2 as favType2,t_user.FAVTYPE3 as favType3,
		t_user.FIRST_LOGIN_TIME as firstLoginTime, t_user.LAST_LOGIN_TIME as lastLoginTime,
		t_user.OPEN_ID as openId,t_user.LATITUDE as latitude,t_user.LONGTITUDE as longitude,t_user.LOGIN_CITY as loginCity from (select openId as id from t_friends where friend_openId=#{openId} and relationship_status='1') b inner join t_user on b.id = t_user.OPEN_ID;

	</select>
	
</mapper>